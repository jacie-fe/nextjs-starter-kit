import SectionLevel from '@/components/static-layout/sectionLevel'

export default function TOTPSetup() {
  return (
    <SectionLevel id='totp' title='Handle TOTP verification'>
      <div>
        Time-based One-Time Password (TOTP) authentication enhances security by
        requiring users to enter a unique code generated by an authenticator
        app. This document provides the steps for implementing TOTP verification
        in your application.
      </div>
      <div>
        <div className='text-lg font-bold'>
          When should you handle TOTP verification?
        </div>
        <div>
          If a user attempts to authenticate and the eAuthenticator server
          detects that notification permissions have not been granted, the API
          request for the session token (
          <a className='text-blue-600' href='#get-session-token'>
            See more
          </a>
          ) will fail with the error.
          <p className='mt-2'>Possible errors include:</p>
          <ul className='mt-2 list-disc space-y-2 pl-6'>
            <li>
              <code className='rounded bg-gray-100 p-1 text-sm'>INACTIVE</code>{' '}
              – Indicates that your application is inactive in the Domain
              Console.
            </li>
            <li>Other relevant errors depending on the specific issue.</li>
          </ul>
          <p className='mt-4 font-bold'>How to handle this scenario? </p>
          <p>
            When your app encounters this error, it should automatically
            transition to the TOTP verification process to allow the user to
            continue authentication. Since push notifications are unavailable,
            the user must enter a TOTP code from their authenticator app
            instead.
          </p>
          <p>
            This ensures that the authentication flow remains uninterrupted
            while maintaining security.
          </p>
        </div>
      </div>
      <ol className='list-decimal space-y-4 pl-6'>
        <li>
          <strong>User logs in</strong> - After the user logs in successfully
          with their credentials, you should check if TOTP is required (if they
          have 2FA enabled).
        </li>
        <li>
          <strong>Display the TOTP input field</strong> – Once the user is
          authenticated but the TOTP verification is required, you display the
          input field where the user can enter their OTP.
        </li>
        <li>
          <strong>Verify the OTP code</strong> – After the user enters the TOTP,
          verify it by comparing the code generated by the eAuthenticator app
          with the one entered by the user.
        </li>
      </ol>
    </SectionLevel>
  )
}
